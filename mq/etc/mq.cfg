// This config file use libconfig syntax. For more detailed information about libconfig, please refer to
// http://www.hyperrealm.com/libconfig/
App:
{
    Daemon = true;      // If app runs as a daemon proc or not
    User = "";       // Set run user. "" means current user
    Log = "../log/mq";
    LogSize = 25000000;
    UdpLog = "udp:localhost:2000"; // The udp log service (ip/port)
    RuntimeInfo = true;
    RuntimeDebug = true; // Print the debug log or not
    RuntimeNetInfo = true;// Print all the packet content on any socket communication.
    ThreadCount:10;       // Threads counts
    MsgCodeSessionTime:3; // The expired time of a session. (seconds)
    PopMsgBlockTimeUs:3000000; //
    HeartBeatMs:1500;
};
Network:
{
    QueueLimit = 1; // The request buffer size
    PackageLimit = 1024; // Package counts limitation
    NetworkAcceptors =
    ( 
        {    
            Address = "inet://0.0.0.0:12010"; //address (ip/port)
            Protocol = "JSON_PROTOCOL"; // protocal
            Translator = "JSONRPC_PROTOCOL"; // translator
            Timeout = 20000; //timeout
            HeartBeat = -1; // Timespan between two heartbeat packet
            ServiceName = "server"; //  service name
            LimitAddresses=
            (
                "10.",
                "192.168.",
                "172.16.",
                "127.0.0."
            );
            Classes=(
                        ("acn::Message", "Message")
                    );
                     
        },
        {    
            Address = "inet://0.0.0.0:12020"; //address (ip/port)
            Protocol = "RAWDATA_PROTOCOL"; // protocal
            Timeout = 100000; //timeout
            HeartBeat = -1; //  Timespan between two heartbeat packet
            ServiceName = "server"; //  service name
            LimitAddresses=
            (
                "10.",
                "192.168.",
                "172.16.",
                "127.0.0."
            );
        }
    );
};
Queue:
{
    RedisAddr = "inet://127.0.0.1:6379"; // redis db's address.(ip/port)
    ConnectorCount = 1; // connector counts
    Timeout = 3000; // timeout
    Password = "nopwd"; //password of redis
};
